#ifndef OPENATCCFGCOMMHELPER_H
#define OPENATCCFGCOMMHELPER_H

/*=====================================================================
模块名 ：和客户端配置软件交互的通信接口模块
文件名 ：OpenATCCfgCommHelper.h
相关文件：OpenATCSocket.h OpenATCComDef.h
实现功能：信号机和配置软件的参数交互
作者 ：李永萍
版权 ：<Copyright(c) 2019-2020 Suzhou Keda Technology Co.,Ltd. All right reserved.>
--------------------------------------------------------------------------------------------------------------------
修改记录：
日 期           版本    修改人             走读人             修改记录
2019/09/06      V1.0    李永萍）           李永萍             创建模块
====================================================================*/

#include "OpenATCSocket.h"
#include "OpenATCComDef.h"
#include "../../Include/OpenATCLog.h"

class COpenATCSocket;

typedef struct tagPeerStatus
{
	char	m_szPeerIp[20];
    int     m_nPeerPort;
    bool    m_bConnectStatus;
    time_t  m_lastReadOkTime;
}TPeerStatus,*PTPeerStatus; 

/*=====================================================================
类名 ：CAscCfgCommHelper
功能 ：信号机和配置软件的参数交互
主要接口：void AcceptConnection：接受客户端的连接，参数为客户端的端口
备注 ：
--------------------------------------------------------------------------------------------------------------------
修改记录：
日 期           版本    修改人             走读人             修改记录
2019/09/06      V1.0    李永萍             李永萍             创建类
====================================================================*/
class COpenATCCfgCommHelper
{
public:

    COpenATCCfgCommHelper();
    virtual ~COpenATCCfgCommHelper();

	/****************************************************
	函数名：AcceptConnection
    功能：接收客户端的连接
	算法实现:
    参数说明 ： chNetCardIp，IP地址
                wPort，端口
    返回值说明：OPENATC_RTN_OK，有客户端来连接
	            OPENATC_RTN_FAILED，无客户端来连接
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
    int  AcceptConnection(char chNetCardIp[], unsigned short wPort, bool isCfgIP);


	/****************************************************
	函数名：Read
    功能：读取数据
	算法实现:
    参数说明 ： chRecvBuff，接收缓存
	            nRecvBuffSize，接收缓存的大小
			    nRecvSize，返回给调用函数的接收数据的大小
			    bSysTimeReset，时间是否需要重置
    返回值说明：OPENATC_RTN_OK，读取数据成功
	            OPENATC_RTN_FAILED，读取数据失败
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
    int  Read(unsigned char *chRecvBuff, int nRecvBuffSize,  int &nRecvSize, bool &bSysTimeReset, char * chPeerIp);

	/****************************************************
	函数名：Write
    功能：发送数据
	算法实现:
    参数说明 ： chSendBuff，发送数据的缓存
	            nSendSize，发送数据的大小
    返回值说明：OPENATC_RTN_OK，发送数据成功
	            OPENATC_RTN_FAILED，发送数据失败
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
    int  Write(unsigned char *chSendBuff, int nSendSize);

	/****************************************************
	函数名：Close
    功能：关闭连接
	算法实现:
    参数说明 ： 无
    返回值说明：无
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
    void Close();

	/****************************************************
	函数名：SetSendTimeOut
    功能：设置发送延时时间
	算法实现:
    参数说明 ： nMSec，延时时间
    返回值说明：无
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	void   SetSendTimeOut(int nMSec);

	/****************************************************
	函数名：SetRecvTimeOut
    功能：设置接收延时时间
	算法实现:
    参数说明 ： nMSec，延时时间
    返回值说明：无
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	void   SetRecvTimeOut(int nMSec);

   
    /****************************************************
	函数名：GetIpAddr
    功能：获取网络设备ip地址
	算法实现:
    参数说明 ： ifname，网卡
                ip，IP地址
    返回值说明：0，成功，非0，失败
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
    int    GetIpAddr(const char *ifname, char *ip);

	/****************************************************
	函数名：PreSetCenterPeerIP
    功能：预置中心IP
	算法实现:
    参数说明 ： ip，IP地址
    返回值说明：无
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
    void    PreSetCenterPeerIP(char *ip,COpenATCLog * pOpenATCLog);
    
private:
    enum
    {
        /**
         *  客户端和服务端的心跳间隔
         */ 
        COMM_HEART_BEAT   = 30,
		MAX_CONNECT_COUNT = 2,
    };
    
    //= Forbidden functions.
    COpenATCCfgCommHelper(const COpenATCCfgCommHelper& init){}
    COpenATCCfgCommHelper& operator = (const COpenATCCfgCommHelper& right){}

	unsigned short         m_wBindPort;

	bool                   m_bBindState;

    COpenATCSocket         m_acceptSock;

    TPeerStatus            m_tPeerStaus[MAX_CONNECT_COUNT];

	int                    m_nSendTimeOut;

	int                    m_nRecvTimeOut;

	COpenATCLog           * m_pOpenATCLog;
    
};

#endif// !ifndef OPENATCCFGCOMMHELPER_H
