
//=============================================================================
/**
 * @file    OpenATCPackUnpackBase.h
 *
 *
 * The file define a base class COpenATCPackUnpackBase to handle data pack and unpack.
 *
 *
 * @author 
 */
//=============================================================================

#if _MSC_VER > 1000
#  pragma once
#endif

#ifndef HL__OPENATC_PACKUNPACK_HANDLER_BASE__H
#define HL__OPENATC_PACKUNPACK_HANDLER_BASE__H


typedef enum tagDataPackUnpackMode
{
	PACK_UNPACK_MODE_ITS300	= 1,
	PACK_UNPACK_MODE_COMM	= 2,
	PACK_UNPACK_MODE_CAMERA	= 3,
	PACK_UNPACK_MODE_GB20999 = 4,	//20999打包模块
}EDataPackUnpackMode;

enum
{
	ReadNoData,
	ReadNoComplete,
	ReadWrongData,
	ReadOk
};

class COpenATCPackUnpackBase
{
public:
    /****************************************************
	函数名：Write
    功能：把接收的数据写入接收缓冲区
	算法实现:
    参数说明 ： pBuff,需要写入的数据指针
	            dwCount,数据长度
    返回值说明：无
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	virtual void Write(unsigned char *pBuff, unsigned int dwCount) = 0;

    /****************************************************
	函数名：PackBuffer
    功能：打包
	算法实现:
    参数：  pSource,打包源数据
	        dwSrcCount,源数据的数量
	        pDest,打包目标数据指针
	        dwDstCount,打包结果长度
    返回值：无
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	virtual void PackBuffer(unsigned char *pSource, unsigned int dwSrcCount, unsigned char *pDest, unsigned int & dwDstCount) = 0;
	
    /****************************************************
	函数名：Read
    功能：解包
	算法实现:
    参数：  pBuff,解出的数据包内容
	        dwCount,数据包的长度
    返回值：ReadNoData 数据长度为零
	        ReadNoComplete 数据不完整
			ReadWrongData 数据错误
			ReadOk 读数据成功
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
    virtual int Read(unsigned char *pBuff, unsigned int & dwCount) = 0;

    /****************************************************
	函数名：WriteSend
    功能：向发送缓冲区写入数据
	算法实现:
    参数：  pBuff,需要写入的数据指针
	        dwCount,需要写入的数据量
    返回值：无
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	virtual void WriteSend(unsigned char *pBuff, unsigned int dwCount) = 0;
	
    /****************************************************
	函数名：GetSendBuffPtr
    功能：获取发送缓冲区的头指针与数据量
	算法实现:
    参数：  ppBuff,发送缓冲区的头指针的指针
	        dwCount,发送缓冲区的数据量
    返回值：无
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
    virtual void GetSendBuffPtr(unsigned char **ppBuff, unsigned int & dwCount) = 0;
	
    /****************************************************
	函数名：OnSend
    功能：数据发送完成时调用,移动头指针
	算法实现:
    参数：  dwCount,发送成功的数据量
    返回值：无
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
    virtual void OnSend(unsigned int dwCount)= 0;

    /****************************************************
	函数名：ClearBuff
    功能：清空缓冲区,重置缓冲区头尾指针。
	算法实现:
    参数：  无。
    返回值：无。
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	virtual void ClearBuff(void) = 0;
	virtual void ClearBuff(int rawTail) = 0;
};

#endif//HL__OPENATC_PACKUNPACK_HANDLER_BASE__H

