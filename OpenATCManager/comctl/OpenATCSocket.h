/*=====================================================================
模块名 ：基础通信模块
文件名 ：OpenATCSocket.h
相关文件：
实现功能：基础通信
作者 ：李永萍
版权 ：<Copyright(c) 2019-2020 Suzhou Keda Technology Co.,Ltd. All right reserved.>
--------------------------------------------------------------------------------------------------------------------
修改记录：
日 期           版本    修改人             走读人             修改记录
2019/09/06      V1.0    李永萍）           李永萍             创建模块
====================================================================*/

#ifndef OPENATCSOCKET_H 
#define OPENATCSOCKET_H

#include "OpenATCComDef.h"
#include "../../Include/OpenATCParamStructDefine.h"

/*=====================================================================
类名 ：CAscSocket
功能 ：基础通信类
主要接口：int Connect：连接服务端，第一个参数是IP地址，第二个参数是端口
备注 ：
--------------------------------------------------------------------------------------------------------------------
修改记录：
日 期           版本    修改人             走读人             修改记录
2019/09/06      V1.0    李永萍             李永萍             创建类
====================================================================*/
class COpenATCSocket 
{
public:
    typedef enum
	{
	    SockSuccess = 0,               //成功
	    SockClose   = 0,               //socket被关闭(recv,recvfrom)
		SockTimeOut = 0,               //select 超时
		SockInvalid = INVALID_SOCKET,  //无效socket
		SockError   = SOCKET_ERROR     //socket错误
	}SockRetCode;

	typedef enum
	{
	    RECVBUFFER_SIZE = 50 * 1024,             
	    SENDBUFFER_SIZE = 50 * 1024             
	}BuffSize;

public:
	COpenATCSocket();
	virtual ~COpenATCSocket();

public:

	/****************************************************
	函数名：SetSocketType
    功能：设定socket类型，包括SOCK_STREAM和SOCK_DGRAM
	算法实现:
    参数说明 ： nSocketType，套接字类型
    返回值说明：无
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	void    SetSocketType(int nSocketType);

    /****************************************************
	函数名：SetComType
    功能：设定通信类型，包括UDP_CLIENT和UDP_SERVICE
	算法实现:
    参数说明 ： nComType，通信类型
    返回值说明：无
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	void    SetComType(int nComType);

	/****************************************************
	函数名：Connect
    功能：连接
	算法实现:
    参数说明 ： szDestAddr，地址
	            nDestPort，端口
				nMSec，毫秒
    返回值说明：ATC_OK，连接成功
	            ATC_FAIL，连接失败
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	int    Connect(char *szDestAddr, int nDestPort, long nMSec);

	/****************************************************
	函数名：Bind
    功能：绑定地址
	算法实现:
    参数说明 ： szLocalAddr，地址
	            nLocalPort，端口
    返回值说明：ATC_OK，绑定地址成功
	            ATC_FAIL，绑定地址失败
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	int    Bind(char *szLocalAddr, int nLocalPort,bool isCfgIP);

	/****************************************************
	函数名：Listen
    功能：监听
	算法实现:
    参数说明 ： nBackLog，设置队列长度
    返回值说明：ATC_OK，监听成功
	            ATC_FAIL，监听失败
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	int    Listen(int nBackLog);

	/****************************************************
	函数名：Accept
    功能：接受客户端连接
	算法实现:
    参数说明 ： socket，接受到的socket
	            addrlen，长度
    返回值说明：ATC_OK，接受客户端连接成功
	            ATC_FAIL，接受客户端连接失败
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	int    Accept(SOCKET & socket);
	
	/****************************************************
	函数名：Write
    功能：发送数据
	算法实现:
    参数说明 ： szData，数据
	            nLen，长度
				nMSec，毫秒
    返回值说明：ATC_OK，发送数据成功
	            ATC_FAIL，发送数据失败
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	int    Write(unsigned char *szData, int nLen, int nMSec);

	/****************************************************
	函数名：Read
    功能：接收数据
	算法实现:
    参数说明 ： szData，数据
	            nLen，长度
				nMSec，毫秒
    返回值说明：ATC_OK，接收数据成功
	            ATC_FAIL，接收数据失败
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	int    Read(char *szData, int nLen, int nMSec);

	/****************************************************
	函数名：GetDestAddr
    功能：获取目标主机的地址和端口
	算法实现:
    参数说明 ： szAddr，地址
	            nPort，端口
    返回值说明：ATC_OK，接收数据成功
	            ATC_FAIL，接收数据失败
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	int    GetDestAddr(char *szAddr, int *nPort);

	/****************************************************
	函数名：SetNonBlockMode
    功能：设置socket的阻塞和非阻塞
	算法实现:
    参数说明 ： dwBlock，1非阻塞，0阻塞
    返回值说明：ATC_OK，接收数据成功
	            ATC_FAIL，接收数据失败
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	int    SetNonBlockMode(unsigned long dwBlock);

	/****************************************************
	函数名：Select
    功能：设置处于就绪状态并且已经包含在fd_set结构中的描述字总数
	算法实现:
    参数说明 ： readfds，指向一组等待可读性检查的套接口；
			    writefds，指向一组等待可写性检查的套接口；
			    exceptfds，指向一组等待错误检查的套接口；
			    mses,本函数最多等待时间，对阻塞操作则为0。
    返回值说明：ATC_OK，接收数据成功
	            ATC_FAIL，接收数据失败
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	int    Select(fd_set *readfds, fd_set *writefds = NULL, fd_set *exceptfds = NULL, long msec = 0);

	/****************************************************
	函数名：RecvFrom
    功能：UDP协议的接收数据函数
	算法实现:
    参数说明 ： szData，数据
	            nLen，长度
				nMSec，毫秒
    返回值说明：ATC_OK，接收数据成功
	            ATC_FAIL，接收数据失败
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	int    RecvFrom(char* szData, int nLen, int nMSec);

	/****************************************************
	函数名：SendTo
    功能：UDP协议发送函数
	算法实现:
    参数说明 ： szData，数据
	            nLen，数据大小
    返回值说明：ATC_OK，接收数据成功
	            ATC_FAIL，接收数据失败
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	int    SendTo(char* szData, int nLen);

	/****************************************************
	函数名：Close
    功能：关闭socket
	算法实现:
    参数说明 ： 无
    返回值说明：无
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	void   Close();

	/****************************************************
	函数名：SetSocket
    功能：设置socket
	算法实现:
    参数说明 ： socket，已经连接上的socket
    返回值说明：无
    --------------------------------------------------------------------------------------------------------------------
	修改记录：
	日 期           版本    修改人             走读人             修改记录
	2019/09/06      V1.0    李永萍             李永萍             创建
	====================================================================*/
	void   SetSocket(SOCKET socket);

private:
	 SOCKET		       m_socket;  
	 int			   m_nSocketType;	//socket类型，包括TCP(SOCK_STREAM)和UDP(SOCK_DGRAM)
     int               m_nComType;		//通信类型，包括客户端和服务端

	 SOCKADDR_IN       m_sockLocal;
	 SOCKADDR_IN	   m_sockDest;
	 SOCKADDR_IN       m_sockRecvFrom;
};

#endif // !ifndef OPENATCSOCKET_H
